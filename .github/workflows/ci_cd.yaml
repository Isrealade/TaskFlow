name: CI/CD Pipeline 

on: 
  push:
    branches: 
      - '**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  code-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies 
        run: npm install

      - name: Run Lint and Test
        continue-on-error: true 
        run: |
          npm run lint && \
          npm run format && \
          npm run test

      - name: Secret Scanning
        uses: trufflesecurity/trufflehog@0f58ae7c5036094a1e3e750d18772af92821b503 # v3
        with:
          extra_args: --results=verified,unknown

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@1a6d90ebcb0e6a6b1d87e37ba693fe453195ae25 # v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@cf038b0e0cdecfa9e56c198bbb7d21d751d62c3b # v1
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build project & confirm build
        id: build
        run: |
          echo "Building project...."
          npm run build
          echo "confirming build output...."
          if [ ! -d "build" ]; then
            echo "Build output directory 'build' not found!"
            exit 1
          fi
          echo "Build successful - output directory exists"
          ls -la build/

      # Upload for GitHub Pages
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v3
        with:
          path: build/

      # Upload for s3 bucket
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        id: artifact-upload
        with:
          name: build
          path: build/

  github-pages-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'main'
    needs: code-validation
    permissions:
      pages: write
      id-token: write
      contents: read
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v4

      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4

  s3-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'main'
    needs: code-validation
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Download s3 artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v4
        with:
          name: build
          path: build

      - name: Deploy to s3
        run: aws s3 sync ./build s3://${{ vars.BUCKET_NAME }} --delete
